@*@using MegaDesk_Web_Application.AppCode;*@
@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "MegaDesk - Edit Quote";

    var quoteId = "";
    var name = "";
    var depth = 0;
    var width = 0;
    var drawerCount = 0;
    var material = "";
    var rushDays = "";
    var total = 0;
    var oak = "";
    var laminate = "";
    var pine = "";
    var rosewood = "";
    var veneer = "";
    var standard = "";
    var three = "";
    var five = "";
    var seven = "";

    DateTime myUpdatedDateTime = DateTime.Now;
    string sqlUpdatedDate = "";

    if (!IsPost)
    {
        if (!Request.QueryString["id"].IsEmpty() && Request.QueryString["id"].IsInt())
        {
            quoteId = Request.QueryString["id"];
            var db = Database.Open("MegaDesk");
            var dbCommand = "SELECT dq.DeskQuoteId, dq.CustomerName, d.Width, d.Depth, d.SurfaceMaterial, d.NumberOfDrawers, dq.RushOption, dq.FinalQuote, dq.QuoteDate FROM DeskQuote dq INNER JOIN Desk d ON dq.DeskId = d.DeskId WHERE dq.DeskQuoteId = @0";
            var row = db.QuerySingle(dbCommand, quoteId);
            if (row != null)
            {
                name = row.CustomerName;
                depth = row.Depth;
                width = row.Width;
                drawerCount = row.NumberOfDrawers;
                material = row.SurfaceMaterial;
                rushDays = row.RushOption;

                switch (material)
                {
                    case "Oak":
                        oak = "selected";
                        break;
                    case "Laminate":
                        laminate = "selected";
                        break;
                    case "Pine":
                        pine = "selected";
                        break;
                    case "Rosewood":
                        rosewood = "selected";
                        break;
                    case "Veneer":
                        veneer = "selected";
                        break;
                }

                switch (rushDays)
                {
                    case "Standard":
                        standard = "selected";
                        break;
                    case "3-Day Delivery":
                        three = "selected";
                        break;
                    case "5-Day Delivery":
                        five = "selected";
                        break;
                    case "7-Day Delivery":
                        seven = "selected";
                        break;
                }
            }
            else
            {
                Validation.AddFormError("No entry was found for that Id.");
            }
        }
        else
        {
            Validation.AddFormError("No quote was selected.");
        }
    }

    if (IsPost)
    {
        // Required fields validation
        Validation.RequireField("name", "You must enter a customer name");
        Validation.RequireField("depth", "Depth is required");
        Validation.RequireField("width", "Width is required");
        Validation.RequireField("drawerCount", "Drawer Count is required");

        //Data type validation
        Validation.Add("depth", Validator.Integer("Depth must be an integer"));
        Validation.Add("width", Validator.Integer("Width must be an integer"));
        Validation.Add("drawerCount", Validator.Integer("Drawer Count must be an integer"));

        name = Request.Form["Name"];
        depth = Convert.ToInt32(Request.Form["Depth"]);
        width = Convert.ToInt32(Request.Form["Width"]);
        drawerCount = Convert.ToInt32(Request.Form["DrawerCount"]);
        material = Request.Form["Material"];
        rushDays = Request.Form["RushDays"];
        quoteId = Request.Form["quoteId"];
        sqlUpdatedDate = myUpdatedDateTime.ToString("yyyy-MM-dd HH:mm:ss.fff");

        Desk desk = new Desk();

        desk.Width = width;
        desk.Depth = depth;
        desk.NumberOfDrawers = drawerCount;
        desk.DeskMaterial = (Desk.SurfaceMaterial)Enum.Parse(typeof(Desk.SurfaceMaterial), material);

        DeskQuote deskQuote = new DeskQuote();

        deskQuote.Desk = desk;
        deskQuote.CustomerName = name;
        deskQuote.RushOption = rushDays;
        deskQuote.QuoteDate = sqlUpdatedDate;

        total = deskQuote.CalcQuote();

        if (Validation.IsValid())
        {

            sqlUpdatedDate = myUpdatedDateTime.ToString("yyyy-MM-dd HH:mm:ss.fff");
            var db = Database.Open("MegaDesk");
            var updateDesk = "UPDATE Desk SET Width=@0, Depth=@1, NumberOfDrawers=@2, SurfaceMaterial=@3 WHERE DeskId = @4";
            db.Execute(updateDesk, desk.Width, desk.Depth, desk.NumberOfDrawers, desk.DeskMaterial, quoteId);


            var updateDeskQuote = "UPDATE DeskQuote SET CustomerName=@0, RushOption=@1, FinalQuote=@2, QuoteDate=@3 WHERE DeskQuoteId=@4";
            db.Execute(updateDeskQuote, deskQuote.CustomerName, deskQuote.RushOption, total, deskQuote.QuoteDate, quoteId);

            Response.Redirect("~/MainMenu");
        }


    }
}

<header class="w3-container w3-blue-grey"><h2>Edit Quote</h2></header>
<div>
@Html.ValidationSummary()
</div>
<form method="post" class="w3-container">
    <fieldset class="w3-card-4">

        <p>
            <label for="name">Customer Name:</label>
            <input type="text" id="name" name="name" value="@name" />
            @Html.ValidationMessage("name")
        </p>

        <p>
            <label for="depth">Depth:</label>
            <input type="number" id="depth" name="depth" min="12" max="48" value="@depth" />
            @Html.ValidationMessage("depth")
        </p>

        <p>
            <label for="width">Width:</label>
            <input type="number" id="width" name="width" min="24" max="96" value="@width" />
            @Html.ValidationMessage("width")
        </p>

        <p>
            <label for="drawerCount">Drawer Count:</label>
            <input type="number" id="drawerCount" name="drawerCount" min="0" max="7" value="@drawerCount" />
            @Html.ValidationMessage("drawerCount")
        </p>

        <p>
            <label for="material">Material:</label>
            <select id="material" name="material" style="background-image: url(images/@(material.ToLower()).jpg;" onchange="swapMaterialImage()">
                <option @oak>Oak</option>
                <option @laminate>Laminate</option>
                <option @pine>Pine</option>
                <option @rosewood>Rosewood</option>
                <option @veneer>Veneer</option>
            </select>
            <script>
               function swapMaterialImage() {
                   var current = document.getElementById("material").value.toLowerCase();
                   document.getElementById("material").style.backgroundImage = "url(images/" + current + ".jpg)";
               }
            </script>
        </p>

        <p>
            <label for="rushDays">Rush Days:</label>
            <select id="rushDays" name="rushDays">
                <option @standard>Standard</option>
                <option @three>3-Day Delivery</option>
                <option @five>5-Day Delivery </option>
                <option @seven>7-Day Delivery</option>
            </select>
        </p>

        <input type="hidden" name="quoteId" value="@quoteId"/>

        <p><input type="submit" name="buttonSubmit" value="Submit Changes" class="w3-button w3-light-grey"/></p>
    </fieldset>
</form>
<p><a href="~/MainMenu"  class="w3-button w3-light-grey">Return to Quotes</a></p>